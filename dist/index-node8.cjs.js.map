{"version":3,"file":"index-node8.cjs.js","sources":["../src/index.js"],"sourcesContent":["import generate from '@babel/generator';\n\nconst nodeToString = (id) => {\n  let code = generate(id, {\n    concise: true,\n    retainLines: true,\n  }).code;\n  code = code.trim();\n  if (!code.includes('\\n')) return code;\n  const ident = code\n    .substr(code.lastIndexOf('\\n') + 1)\n    .replace(/^(\\s+)[^\\s].*$/, '$1');\n  code = code.replace(new RegExp(`^${ident}`, 'gm'), '');\n  return code;\n};\n\nexport default function({ types: t }) {\n  return {\n    visitor: {\n      JSXElement(path, state) {\n        const node = path.node;\n        const openingElement = node.openingElement;\n\n        if (!t.isJSXIdentifier(openingElement.name)) return;\n\n        const binding = path.scope.getBinding(openingElement.name.name);\n        if (!binding || !t.isImportDeclaration(binding.path.parent)) return;\n        if (!t.isStringLiteral(binding.path.parent.source)) return;\n        if (\n          binding.path.parent.source.value !== 'babel-plugin-jsx-code/Component'\n        ) {\n          return;\n        }\n\n        if (openingElement.attributes.length === 0) {\n          throw path.buildCodeFrameError(\n            'No attributes, required attribute `render`',\n          );\n        }\n        const renderAttribute = openingElement.attributes.find(\n          (attribute) =>\n            t.isJSXIdentifier(attribute.name) &&\n            attribute.name.name === 'render',\n        );\n        if (!renderAttribute) {\n          throw path.buildCodeFrameError('Missing attribute `render`');\n        }\n        if (\n          !t.isJSXExpressionContainer(renderAttribute.value) ||\n          !t.isIdentifier(renderAttribute.value.expression)\n        ) {\n          throw path.buildCodeFrameError(\n            '`render` should be a valid render component, like `render={RenderCode}`',\n          );\n        }\n\n        const renderIdentifier = renderAttribute.value.expression;\n\n        const children = node.children.filter(\n          (node) => !t.isJSXText(node) || node.value.trim(),\n        );\n        if (children.length !== 1) {\n          throw path.buildCodeFrameError('Only one child is expected');\n        }\n\n        const sourceValue = t.jSXExpressionContainer(\n          t.stringLiteral(nodeToString(children[0])),\n        );\n        const resultValue = t.jSXExpressionContainer(children[0]);\n\n        path.replaceWith(\n          t.jSXElement(\n            t.jSXOpeningElement(\n              t.JSXIdentifier(renderIdentifier.name),\n              [\n                t.jSXAttribute(t.jSXIdentifier('source'), sourceValue),\n                t.jSXAttribute(t.jSXIdentifier('result'), resultValue),\n              ],\n              true,\n            ),\n            null,\n            [],\n            true,\n          ),\n        );\n      },\n    },\n  };\n}\n"],"names":["nodeToString","id","code","generate","concise","retainLines","trim","includes","ident","substr","lastIndexOf","replace","RegExp","types","t","visitor","JSXElement","path","node","openingElement","isJSXIdentifier","name","binding","scope","getBinding","isImportDeclaration","parent","isStringLiteral","source","value","attributes","length","buildCodeFrameError","renderAttribute","find","attribute","isJSXExpressionContainer","isIdentifier","expression","renderIdentifier","children","filter","isJSXText","sourceValue","jSXExpressionContainer","stringLiteral","resultValue","replaceWith","jSXElement","jSXOpeningElement","JSXIdentifier","jSXAttribute","jSXIdentifier"],"mappings":"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"}